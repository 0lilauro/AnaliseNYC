DROP SCHEMA IF EXISTS NYC CASCADE;
CREATE SCHEMA IF NOT EXISTS NYC;

CREATE TABLE IF NOT EXISTS NYC.TRIP(
	VENDOR_ID VARCHAR(50) NOT NULL,
	PICKUP_DATETIME TIMESTAMP NOT NULL,
	DROPOFF_DATETIME TIMESTAMP NOT NULL,
	PASSENGER_COUNT SMALLINT  NOT NULL,
	TRIP_DISTANCE NUMERIC(7,2) NOT NULL,
	PICKUP_LONGITUDE NUMERIC(11,7),
	PICKUP_LATITUDE NUMERIC(11,7),
	DROPOFF_LONGITUDE NUMERIC(11,7),
	DROPOFF_LATITUDE NUMERIC(11,7),
	RATE_CODE VARCHAR(100) NULL,
	STORE_AND_FWD_FLAG VARCHAR(100) NULL,
	PAYMENT_TYPE VARCHAR(50) NOT NULL,
	FARE_AMOUNT DECIMAL(6,2) NOT NULL DEFAULT 0,
	SURCHARGE DECIMAL(6,2) NOT NULL DEFAULT 0,
	TIP_AMOUNT DECIMAL(6,2) NOT NULL DEFAULT 0,
	TOTAL_AMOUNT DECIMAL(6,2) NOT NULL DEFAULT 0,
	TOLLS_AMOUNT DECIMAL(6,2) NOT NULL DEFAULT 0
);

CREATE USER popbot WITH PASSWORD 'XXXXXXXXXXXXXXXXXX';
CREATE USER analytics WITH PASSWORD 'XXXXXXXXXXXXXXXXX';

GRANT USAGE ON SCHEMA NYC TO popbot;
REVOKE ALL ON nyc.trip from popbot CASCADE;
GRANT SELECT, INSERT, DELETE, UPDATE ON  NYC.trip TO popbot;
     
GRANT USAGE ON SCHEMA NYC TO analytics;
REVOKE ALL ON nyc.trip from analytics CASCADE;
GRANT SELECT ON  NYC.trip TO analytics;


INSERT INTO NYC.TRIP (
	DROPOFF_DATETIME, DROPOFF_LATITUDE, DROPOFF_LONGITUDE,
	FARE_AMOUNT, PASSENGER_COUNT, PAYMENT_TYPE,
	PICKUP_DATETIME, PICKUP_LATITUDE, PICKUP_LONGITUDE,
	RATE_CODE, STORE_AND_FWD_FLAG, SURCHARGE,
	TIP_AMOUNT, TOLLS_AMOUNT, TOTAL_AMOUNT,
	TRIP_DISTANCE, VENDOR_ID
)
VALUES (
	'2009-04-21T18:57:09.433767+00:00', 40.74795, -73.994712,
	5.4, 2, 'Cash',
	'2009-04-21T18:51:11.767205+00:00', 40.74295, -74.004114,
	NULL, NULL, 0,
    0, 0, 5.4,
	0.8, 'CMT'
);




-- 1)
SELECT
	COUNT(T.TRIP_DISTANCE) as "DISTANCE"
FROM NYC.TRIP T
WHERE 
	T.PASSENGER_COUNT <= 2;

SELECT
	T.TRIP_DISTANCE as "DISTANCE"
FROM NYC.TRIP T
WHERE 
	T.PASSENGER_COUNT <= 2;
	

-- 2)
SELECT
	SUM(T.TOTAL_AMOUNT),
	T.VENDOR_ID AS "vendor"
FROM NYC.TRIP T
GROUP BY T.VENDOR_ID 
ORDER BY SUM(T.TOTAL_AMOUNT) DESC
LIMIT 3;


-- 3)
SELECT
	COUNT(T.VENDOR_ID) AS "occurency",
	CONCAT(
		CAST(DATE_PART('YEAR', T.pickup_datetime) AS VARCHAR(4)), 
		'/',
		CAST(DATE_PART('MONTH', T.pickup_datetime) AS VARCHAR(2))
	) AS "key",
	CAST(
		DATE_PART('YEAR', T.PICKUP_DATETIME) AS VARCHAR(4)
	) AS "year",
	CAST(
		DATE_PART('MONTH', T.PICKUP_DATETIME) AS VARCHAR(2)
	) AS "month"
FROM NYC.TRIP T
WHERE T.payment_type IN ('Cas', 'CAS', 'Cash', 'CASH', 'CSH')
GROUP BY 3, 4;

-- 4)
SELECT
	SUM(T.TIP_AMOUNT) AS "tip",
	CONCAT(
		CAST(DATE_PART('MONTH', T.PICKUP_DATETIME) AS VARCHAR(2)), 
		'/',
		CAST(DATE_PART('DAY', T.PICKUP_DATETIME) AS VARCHAR(2))
	) AS "key",
	CAST(
		DATE_PART('MONTH', T.PICKUP_DATETIME) AS VARCHAR(2)
	) AS "month",
	CAST(
		DATE_PART('DAY', T.PICKUP_DATETIME) AS VARCHAR(2)
	) AS "day"
FROM NYC.TRIP T
WHERE 
	DATE_PART('YEAR', T.PICKUP_DATETIME) = 2012
	AND
	DATE_PART('MONTH', T.PICKUP_DATETIME) IN (
		SELECT 
			DISTINCT CAST(DATE_PART('MONTH', T.PICKUP_DATETIME) AS INTEGER) AS "MONTHS"
		FROM NYC.TRIP T
		WHERE 
			DATE_PART('YEAR', T.PICKUP_DATETIME) = 2012
		ORDER BY 1 DESC
		LIMIT 3	
	)
GROUP BY 3, 4;

-- 5)              
SELECT (
 	DATE_PART('DAY', T.DROPOFF_DATETIME::TIMESTAMP - T.PICKUP_DATETIME::TIMESTAMP) * 24 + 
	DATE_PART('HOUR', T.DROPOFF_DATETIME::TIMESTAMP - T.PICKUP_DATETIME::TIMESTAMP)) * 60 +
    DATE_PART('MINUTE', T.DROPOFF_DATETIME::TIMESTAMP - T.PICKUP_DATETIME::TIMESTAMP) AS "time_trip",
	T.PICKUP_DATETIME AS "pick_up",
	T.DROPOFF_DATETIME AS "drop_off"
FROM NYC.TRIP T
WHERE 
	EXTRACT(DOW FROM T.PICKUP_DATETIME::TIMESTAMP) IN (0, 6);


-- 6)
SELECT 
	T.DROPOFF_LONGITUDE AS  "longitude",
	T.DROPOFF_LATITUDE AS  "latitude"
FROM NYC.TRIP T
WHERE 
	DATE_PART('YEAR', T.PICKUP_DATETIME) = 2010;